apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
spec:
  size: 2
  image: vault:1.1.0
  bankVaultsImage: banzaicloud/bank-vaults:latest

  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault

  # Unsealing will be done via Kubernetes Secrets if not defined otherwise (not highly secure, but this is just an example)

  # NOTE: you will need a MySQL instance, grab one with:
  # helm upgrade --install mysql stable/mysql --set mysqlRootPassword=your-root-password --set mysqlDatabase=vault --set mysqlUser=vault --set mysqlPassword=secret

  # A YAML representation of a final vault config file, this config represents
  # a HA config with MySQL.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      mysql:
        address: "mysql:3306"
        username: vault
        password: "${ .Env.MYSQL_VAULT_PASSWORD }"
        ha_enabled: "true"
    listener:
      tcp:
        address: "0.0.0.0:8200"
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    api_addr: https://vault.default:8200
    telemetry:
      statsd_address: localhost:9125
    ui: true

  # See: https://github.com/banzaicloud/bank-vaults#example-external-vault-configuration for more details.
  externalConfig:
    policies:
      - name: allow_secrets
        rules: path "secret/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
          }
    auth:
      - type: kubernetes
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: default
            bound_service_account_namespaces: default
            policies: allow_secrets
            ttl: 1h
    secrets:
      - type: database
        description: MySQL Database secret engine.
        configuration:
          config:
            - name: my-mysql
              plugin_name: "mysql-database-plugin"
              connection_url: "{{username}}:{{password}}@tcp(mysql:3306)/"
              allowed_roles: [app]
              username: "root"
              password: "${env `MYSQL_ROOT_PASSWORD`}" # Example how to read environment variables, with the env function
              rotate: true # Ask bank-vaults to ask Vault to rotate the root credentials of MySQL
          roles:
            - name: app
              db_name: app-db
              creation_statements: "CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}'; GRANT ALL ON `app\_%`.* TO '{{name}}'@'%';"
              default_ttl: "10m"
              max_ttl: "24h"

  vaultEnvsConfig:
    - name: MYSQL_VAULT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql
          key: mysql-password

  envsConfig:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql
          key: mysql-root-password
