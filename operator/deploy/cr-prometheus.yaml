# Installing Prometheus Operator is required to make this example work:
# kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/master/bundle.yaml
#
# After applying this check the Vault targets on the Prometheus UI:
#  1. kubectl port-forward prometheus-prometheus-0 9090
#  2. open http://localhost:9090/targets

apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
spec:
  size: 1
  image: vault:1.5.0
  
  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault

  # Specify the Service's type where the Vault Service is exposed
  serviceType: ClusterIP

  statsdDisabled: true

  # Use local disk to store Vault file data, see config section.
  volumes:
    - name: vault-file
      persistentVolumeClaim:
        claimName: vault-file

  volumeMounts:
    - name: vault-file
      mountPath: /vault/file

  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    kubernetes:
      secretNamespace: default

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      file:
        path: "/vault/file"
    listener:
      tcp:
        address: "0.0.0.0:8200"
        # Uncommenting the following line and deleting tls_cert_file and tls_key_file disables TLS
        # tls_disable: true
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    telemetry:
      prometheus_retention_time: "24h"
      disable_hostname: true
    ui: true
  
  serviceMonitorEnabled: true

  # See: https://banzaicloud.com/docs/bank-vaults/cli-tool/#example-external-vault-configuration
  # The repository also contains a lot examples in the deploy/ and operator/deploy directories.
  externalConfig:
    policies:
      - name: prometheus-operator
        rules: path "sys/metrics" {
          capabilities = ["list", "read"]
          }

    auth:
      - type: kubernetes
        roles:
          - name: prometheus
            bound_service_account_names: prometheus
            bound_service_account_namespaces: default
            policies: prometheus-operator
            ttl: 4h

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault-file
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-config
data:
  vault-agent-config.hcl: |
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "prometheus"
        }
      }

      sink "file" {
        config = {
          path = "/home/vault/config-out/.vault-token"
        }
      }
    }

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus

---

apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      app.kubernetes.io/name: vault
  configMaps:
  - vault-agent-config
  containers:
  - name: vault-agent-auth
    image: vault
    securityContext:
      runAsUser: 65534
    volumeMounts:
      - name: configmap-vault-agent-config
        mountPath: /etc/vault
      - name: config-out
        mountPath: /home/vault/config-out
    env:
      - name: VAULT_ADDR
        value: https://vault:8200
      - name: VAULT_SKIP_VERIFY
        value: "true"
    command: ["vault"]
    args:
      [
        "agent",
        "-config=/etc/vault/vault-agent-config.hcl",
        "-log-level=debug",
      ]
