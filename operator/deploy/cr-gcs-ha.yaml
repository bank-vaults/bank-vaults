apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
spec:
  size: 2
  image: vault:1.6.0
  
  # Describe where you would like to store the Vault unseal keys and root token
  # in GCS encrypted with KMS.
  unsealConfig:
    google:
      kmsKeyRing: "vault"
      kmsCryptoKey: "vault-unsealer"
      kmsLocation: "global"
      kmsProject: "continual-air-196513"
      storageBucket: "vault-ha"

  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault

  # A YAML representation of a final vault config file, this config represents
  # a HA config in Google Cloud.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      gcs:
        bucket: "vault-ha"
        ha_enabled: "true"
    listener:
      tcp:
        address: "0.0.0.0:8200"
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    api_addr: https://vault.default:8200
    telemetry:
      statsd_address: localhost:9125
    ui: true

  # See: https://banzaicloud.com/docs/bank-vaults/cli-tool/#example-external-vault-configuration
  # The repository also contains a lot examples in the deploy/ and operator/deploy directories.
  externalConfig:
    policies:
      - name: allow_secrets
        rules: path "secret/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
          }
      - name: gcp_editor_access
        rules: |
          path "gcp/key/editor"
          {
            capabilities = ["read"]
          }
    auth:
      - type: kubernetes
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: default
            bound_service_account_namespaces: default
            policies: allow_secrets
            ttl: 1h
    # See: https://www.vaultproject.io/docs/secrets/gcp/index.html
    secrets:
      - type: gcp
        path: gcp/
        description: Google cloud secret backend
        configuration:
          config:
            - ttl: "60m"
              max_ttl: "0"
          roleset:
            - name: editor
              # To avoid vault deleting and recreating the Google Service Account everytime this config is applied 
              # set create_only=true. Disable when you need to actually apply a change
              create_only: "true"
              secret_type: "service_account_key"
              project: "continual-air-196513"
              bindings: |
                resource "//cloudresourcemanager.googleapis.com/projects/continual-air-196513" {
                  roles = ["roles/editor", "roles/iam.securityAdmin", "roles/iam.roleAdmin", "roles/container.admin"]
                }


  # If you are not using a Service Account to authenticate against GCP you can pass in an
  # GCP credentials refering to a Secret with the following configuration block. You have to
  # create the "gcp-sa" secret manually, it has to have a key called "service-account.json"
  # holding the configuration in the following format:
  # https://cloud.google.com/docs/authentication/getting-started
  credentialsConfig:
    env: GOOGLE_APPLICATION_CREDENTIALS
    path: /etc/gcp/service-account.json
    secretName: gcp-sa
