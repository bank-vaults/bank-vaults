apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault-secondary"
spec:
  size: 1
  image: vault:1.3.1
  bankVaultsImage: banzaicloud/bank-vaults:multi-dc

  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault

  # Specify the Service's type where the Vault Service is exposed
  # Please note that some Ingress controllers like https://github.com/kubernetes/ingress-gce
  # forces you to expose your Service on a NodePort
  serviceType: LoadBalancer

  vaultAnnotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp

  # Use local disk to store Vault raft data, see config section.
  volumeClaimTemplates:
    - metadata:
        name: vault-raft
      spec:
        # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
        # storageClassName: ""
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

  volumeMounts:
    - name: vault-raft
      mountPath: /vault/raft

  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    aws:
      kmsRegion: "eu-central-1,eu-west-1"
      kmsKeyId: "02a2ba49-42ce-487f-b006-34c64f4b760e,9f054126-2a98-470c-9f10-9b3b0cad94a1"
      s3Region: "eu-central-1,eu-west-1"
      s3Bucket: "bank-vaults-0,bank-vaults-1"
      s3Prefix: "raft-" 
  
  raftLeaderAddress: {{.RAFT_LEADER_ADDRESS}}

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      raft:
        path: "/vault/raft"
    listener:
      tcp:
        address: "0.0.0.0:8200"
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    api_addr: https://vault-secondary.default:8200
    # cluster_addr: "https://${.Env.POD_NAME}:8201"
    telemetry:
      statsd_address: localhost:9125
    ui: true

  # See: https://github.com/banzaicloud/bank-vaults#example-external-vault-configuration for more details.
  externalConfig:
    policies:
      - name: allow_secrets
        rules: path "secret/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
          }
    auth:
      - type: kubernetes
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: ["default", "vault-secrets-webhook"]
            bound_service_account_namespaces: ["default", "vswh"]
            policies: allow_secrets
            ttl: 1h

    secrets:
      - path: secret
        type: kv
        description: General secrets.
        options:
          version: 2

  vaultEnvsConfig:
    - name: VAULT_LOG_LEVEL
      value: info
    - name: VAULT_STORAGE_FILE
      value: "/vault/file"

  envsConfig:
    - name: VAULT_RAFT_CACERT
      value: /vault/raft-tls/ca.crt
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
          secretKeyRef:
            name: aws
            key: AWS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
          secretKeyRef:
            name: aws
            key: AWS_SECRET_ACCESS_KEY

  volumes:
    - name: vault-primary-tls
      secret:
        secretName: vault-primary-tls

  bankVaultsVolumeMounts:
    - name: vault-primary-tls
      mountPath: /vault/raft-tls/
