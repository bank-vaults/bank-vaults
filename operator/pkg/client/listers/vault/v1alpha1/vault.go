// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/banzaicloud/bank-vaults/operator/pkg/apis/vault/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VaultLister helps list Vaults.
type VaultLister interface {
	// List lists all Vaults in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Vault, err error)
	// Vaults returns an object that can list and get Vaults.
	Vaults(namespace string) VaultNamespaceLister
	VaultListerExpansion
}

// vaultLister implements the VaultLister interface.
type vaultLister struct {
	indexer cache.Indexer
}

// NewVaultLister returns a new VaultLister.
func NewVaultLister(indexer cache.Indexer) VaultLister {
	return &vaultLister{indexer: indexer}
}

// List lists all Vaults in the indexer.
func (s *vaultLister) List(selector labels.Selector) (ret []*v1alpha1.Vault, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Vault))
	})
	return ret, err
}

// Vaults returns an object that can list and get Vaults.
func (s *vaultLister) Vaults(namespace string) VaultNamespaceLister {
	return vaultNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VaultNamespaceLister helps list and get Vaults.
type VaultNamespaceLister interface {
	// List lists all Vaults in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Vault, err error)
	// Get retrieves the Vault from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Vault, error)
	VaultNamespaceListerExpansion
}

// vaultNamespaceLister implements the VaultNamespaceLister
// interface.
type vaultNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Vaults in the indexer for a given namespace.
func (s vaultNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Vault, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Vault))
	})
	return ret, err
}

// Get retrieves the Vault from the indexer for a given namespace and name.
func (s vaultNamespaceLister) Get(name string) (*v1alpha1.Vault, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vault"), name)
	}
	return obj.(*v1alpha1.Vault), nil
}
