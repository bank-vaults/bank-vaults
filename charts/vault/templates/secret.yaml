{{- if and (not .Values.tls.secretName) (not .Values.certManager.certificate.enabled) }}
{{- $cn := include "vault.fullname" . -}}
{{- $externalDNS := print $cn "." .Release.Namespace -}}
{{- $ca := genCA "vault-ca" 365 -}}
{{- $cert := genSignedCert $cn (list "127.0.0.1") (list $cn $externalDNS) 365 $ca -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "vault.fullname" . }}-tls
  labels:
    helm.sh/chart: {{ template "vault.chart" . }}
    app.kubernetes.io/name: {{ template "vault.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  ca.crt: {{ $ca.Cert | b64enc }}
  ca.key: {{ $ca.Key | b64enc }}
  server.crt: {{ $cert.Cert | b64enc }}
  server.key: {{ $cert.Key | b64enc }}
{{ end }}

---

apiVersion: v1
kind: Secret
metadata:
  name: "{{ template "vault.fullname" . }}-config"
  labels:
    helm.sh/chart: {{ template "vault.chart" . }}
    app.kubernetes.io/name: "{{ template "vault.name" . }}"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
data:
  config.json:
    {{ if .Values.vault.config.storage }}
    {{ .Values.vault.config | toPrettyJson | b64enc }}
    {{ else }}
    {{ (merge .Values.vault.config .Values.vault.defaultStorage) | toPrettyJson | b64enc }}
    {{ end }}
  vault-config.yml:
    {{ .Values.vault.externalConfig | toPrettyJson | b64enc }}
