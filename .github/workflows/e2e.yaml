name: E2E tests

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      log-level:
        description: 'Set log level for verbosity'
        required: false
        default: 'info'
        type: choice
        options:
          - 'info'
          - 'debug'

jobs:
  validate-config-crud:
    name: Validate Config CRUD
    runs-on: ubuntu-latest

    services:
      vault:
        image: hashicorp/vault:1.17.5
        options: >-
          --name=vault
          --cap-add=IPC_LOCK
        env:
          VAULT_DEV_ROOT_TOKEN_ID: 227e1cce-6bf7-30bb-2d2a-acc854318caf
        ports:
          - 8200:8200

    env:
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_TOKEN: 227e1cce-6bf7-30bb-2d2a-acc854318caf
      VAULT_LOG_FILE: vault.log
      BANK_VAULTS_LOG_FILE: bank-vaults.log
      BANK_VAULTS_CONFIG_FILE: /tmp/vault-config.yaml

      # The input value changes according to the workflow context.
      LOG_LEVEL: "${{ github.event.inputs.log-level || inputs.log-level }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Dependencies
        run: |
          wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install vault
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Build Bank-vaults
        run: |
          make build
          echo "${{ github.workspace }}/build" >> $GITHUB_PATH

      - name: Run bank-vaults
        run: |
          touch "${{ env.BANK_VAULTS_CONFIG_FILE }}"
          bank-vaults configure \
            --mode dev \
            --vault-config-file "${{ env.BANK_VAULTS_CONFIG_FILE }}" \
            &> "${{ env.BANK_VAULTS_LOG_FILE }}" & disown

      - name: Test group - Audit
        if: always()
        run: bash e2e/validate-config-crud/test.sh "audit"

      - name: Test group - Auth
        if: always()
        run: bash e2e/validate-config-crud/test.sh "auth"

      - name: Test group - Groups
        if: always()
        run: bash e2e/validate-config-crud/test.sh "groups"

      - name: Test group - Group-Aliases
        if: always()
        run: bash e2e/validate-config-crud/test.sh "group-aliases"

      - name: Test group - Policies
        if: always()
        run: bash e2e/validate-config-crud/test.sh "policies"

      - name: Test group - StartupSecrets
        if: always()
        run: bash e2e/validate-config-crud/test.sh "startupSecrets"

      - name: Test group - Secrets
        if: always()
        run: bash e2e/validate-config-crud/test.sh "secrets"

      - name: Print logs
        if: always()
        run: |
          echo -e "\nVaults logs ..."
          docker logs vault &> "${{ env.VAULT_LOG_FILE }}"
          cat "${{ env.VAULT_LOG_FILE }}"

          echo -e "\nBank-Vaults logs ..."
          cat "${{ env.BANK_VAULTS_LOG_FILE }}"

      - name: Store log files
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        if: always()
        with:
          name: "[${{ github.job }}] logs"
          path: |
            ${{ env.VAULT_LOG_FILE }}
            ${{ env.BANK_VAULTS_LOG_FILE }}
