# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    machine:
      image: circleci/classic:201808-01
      docker_layer_caching: true

    environment:
      GO_VERSION: "1.12"
      K8S_VERSION: v1.12.0
      VAULT_VERSION: "1.0.0"
      KUBECONFIG: /home/circleci/.kube/config
      MINIKUBE_VERSION: v0.31.0
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      MINIKUBE_HOME: /home/circleci
      CHANGE_MINIKUBE_NONE_USER: true
      GOPATH: /home/circleci/go
      DOCKER_LATEST: 1

    steps:
      - checkout

      - restore_cache:
          name: Restore Go module cache
          keys:
          - gomod-v1-{{ .Branch }}-{{ checksum "go.sum" }}
          - gomod-v1-{{ .Branch }}
          - gomod-v1-master
          - gomod-v1

      - run:
          name: Setup golang
          command: |
            sudo rm -rf /usr/local/go
            curl -Lo go.linux-amd64.tar.gz https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && sudo tar -C /usr/local -xzf go.linux-amd64.tar.gz

      - run:
          name: Install dependencies
          command: go mod download

      - save_cache:
          name: Save Go module cache
          key: gomod-v1-{{ .Branch }}-{{ checksum "go.sum" }}
          paths:
              - /home/circleci/go

      - restore_cache:
          name: Restore license cache
          keys:
              - licensei-v1-{{ .Branch }}-{{ checksum "go.sum" }}
              - licensei-v1-{{ .Branch }}
              - licensei-v1-master
              - licensei-v1      

      - run:
          name: Download license information for dependencies
          command: make license-cache

      - save_cache:
          name: Save license cache
          key: licensei-v1-{{ .Branch }}-{{ checksum "go.sum" }}
          paths:
              - .licensei.cache

      - run:
          name: Check dependency licenses
          command: make license-check

      - run:
          name: Start Vault
          command:
              docker run -d -e SKIP_SETCAP=true -e VAULT_DEV_ROOT_TOKEN_ID=227e1cce-6bf7-30bb-2d2a-acc854318caf -p 8200:8200 vault:${VAULT_VERSION}

      - run:
          name: Run verification
          command:
              make check
          environment:
            VAULT_ADDR: http://localhost:8200
            VAULT_TOKEN: 227e1cce-6bf7-30bb-2d2a-acc854318caf

      - run:
          name: Build Docker images
          command: |
            make docker
            make docker-operator
            docker build -f Dockerfile.vault-env -t banzaicloud/vault-env:latest .
            docker build -f Dockerfile.webhook -t banzaicloud/vault-secrets-webhook:latest .

      - run:
          name: Setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config

      - run:
          name: Setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/

      - run:
          name: Start minikube
          command: |
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=${K8S_VERSION}

      - run:
          name: Operator acceptance test
          command:
            hack/acceptance-test.sh
