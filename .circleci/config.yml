version: 2.1

orbs:
  helm: banzaicloud/helm@0.0.7
  snyk: snyk/snyk@0.0.10

jobs:
  snyk:
    docker:
      - image: 'circleci/golang'
    steps:
      - checkout
      - snyk/scan:
          additional-arguments: "--prune-repeated-subdependencies"
          monitor-on-build: true
          fail-on-issues: false

  multi-cluster-acceptance-test:
    machine:
      image: ubuntu-1604:202004-01
      docker_layer_caching: true

    resource_class: large

    environment:
      GO_VERSION: "1.15.1"
      K8S_VERSION: v1.19.2
      HELM_VERSION: v3.3.1
      KUBECONFIG: /home/circleci/.kube/config
      KURUN_VERSION: "0.4.1"
      KIND_VERSION: v0.8.1
      GOPATH: /go
      DOCKER_LATEST: 1

    steps:
      - checkout

      - run:
          name: Setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config

      # TODO: Build and load this images to the kind clusters once this doesn't take ages
      # - run:
      #     name: Build Docker images
      #     command: |
      #       make docker
      #       make docker-operator
      #       make docker-vault-env
      #       make docker-webhook
      #     no_output_timeout: 30m

      - run:
          name: Create go directory
          command: |
            sudo mkdir /go
            sudo chmod 777 /go
      - run:
          name: Setup golang
          command: |
            sudo rm -rf /usr/local/go
            curl -Lo go.linux-amd64.tar.gz https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && sudo tar -C /usr/local -xzf go.linux-amd64.tar.gz && rm go.linux-amd64.tar.gz

      - run:
          name: Install helm and kind and envtpl, cidr
          command: |
            # helm
            curl -L https://git.io/get_helm.sh | DESIRED_VERSION=${HELM_VERSION} bash
            # kind
            go get sigs.k8s.io/kind@${KIND_VERSION}
            sudo mv /go/bin/kind /usr/local/bin/kind
            # envtpl
            go get github.com/subfuzion/envtpl/...
            sudo mv /go/bin/envtpl /usr/local/bin/envtpl
            # cidr
            go get github.com/hankjacobs/cidr
            sudo mv /go/bin/cidr /usr/local/bin/cidr

      - run:
          name: Build the Helm charts
          command: |
            helm dep build ./charts/vault-operator

      - run:
          name: Operator Multi-DC Raft test
          command:
            ./operator/deploy/multi-dc/test/multi-dc-raft.sh install

  publish-chart:
    executor: helm/helm3
    resource_class: small
    parameters:
      charts-dir:
        default: charts
        description: Path of helm chart(s)
        type: string
    steps:
      - checkout
      - helm/setup-repositories:
          chartmuseum-url: 'https://kubernetes-charts.banzaicloud.com'
      - helm/check-parameters:
          charts-dir: charts
      - helm/update-dependencies:
          charts-dir: charts
      - helm/build:
          charts-dir: charts
      - run:
          name: Helm push
          command: |
            cd /workspace/tgz
            tgz="$(find . -name '*.tgz')"
            curl \
              --silent \
              --show-error \
              --fail \
              -X POST \
              -u "${HELM_REPO_USERNAME}:${HELM_REPO_PASSWORD}" \
              --data-binary "@${tgz}" \
              "https://kubernetes-charts.banzaicloud.com/api/charts"

workflows:
  version: 2
  ci:
    jobs:
      # - check
      - snyk:
          context: snyk
          filters:
            branches:
              only:
                - master
      - multi-cluster-acceptance-test

  helm-chart:
    jobs:
      - helm/lint-chart:
          executor: helm/helm2
          charts-dir: charts
          filters:
            tags:
              ignore: /.*/

      - publish-chart:
          context: helm
          charts-dir: charts
          filters:
            tags:
              only: /chart\/\S+\/\d+.\d+.\d+/
            branches:
              ignore: /.*/
